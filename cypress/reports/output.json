{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-02-01T23:59:27.472Z",
    "end": "2025-02-01T23:59:34.535Z",
    "duration": 7063
  },
  "results": [
    {
      "uuid": "a437e3a1-982d-4451-8ecf-5382994251d1",
      "title": "",
      "fullFile": "cypress\\e2e\\duckDuckGoSearch.cy.ts",
      "file": "cypress\\e2e\\duckDuckGoSearch.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2be4ae3-0fb6-4e4c-9560-534fef959a93",
          "title": "DuckDuckGo Search Result Title Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Ensures that the title of each search result contains the word \"Android\"",
              "fullTitle": "DuckDuckGo Search Result Title Validation Ensures that the title of each search result contains the word \"Android\"",
              "timedOut": null,
              "duration": 2261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchPage_1.searchPage.visit(config_1.config.query); // Visit the search page    \nsearchPage_1.searchPage.getSearchResults().each(($result, index) => {\n    const resultIndex = index;\n    searchPage_1.searchPage.getResultTitle($result).then((title) => {\n        // Validations\n        cy.wrap(title).should('include', config_1.config.query); // Verify that the title includes the query\n        cy.wrap(title).should('not.be.empty'); // Verify that the title is not empty\n        cy.log(`Result ${resultIndex + 1}: ${title}`);\n    });\n});",
              "err": {},
              "uuid": "46d7c416-f539-4562-84ff-2563351425a0",
              "parentUUID": "b2be4ae3-0fb6-4e4c-9560-534fef959a93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46d7c416-f539-4562-84ff-2563351425a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2261,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c27d059b-7a53-41fb-9a78-3e84e36781cb",
      "title": "",
      "fullFile": "cypress\\e2e\\regionsModalValidation.cy.ts",
      "file": "cypress\\e2e\\regionsModalValidation.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2531dfc-2c79-4964-8b02-21134c8dd779",
          "title": "DuckDuckGo Regions Modal Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Assert that the total count of region options is greater than 10",
              "fullTitle": "DuckDuckGo Regions Modal Validation Assert that the total count of region options is greater than 10",
              "timedOut": null,
              "duration": 1128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchPage_1.searchPage.visit(config_1.config.query); // Visit search page\ncy.get(selectors_1.SearchPageSelectors.resultsContainer, { timeout: 10000 }).should('be.visible'); // Wait for results to load\nsearchPage_1.searchPage.clickAllRegions(); // Click on the dropdown “All Regions”.\nsearchPage_1.searchPage.getRegionOptions().then(($options) => {\n    const totalCount = $options.length;\n    cy.log(`Total count of dropdown elements (all): ${totalCount}`);\n    cy.wrap(totalCount).should('be.greaterThan', config_1.config.totalToValidate); // Validate that the total number of options is greater than 10.\n});",
              "err": {},
              "uuid": "d502c2d9-cad4-4297-b151-0f39a4fc0b5a",
              "parentUUID": "c2531dfc-2c79-4964-8b02-21134c8dd779",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d502c2d9-cad4-4297-b151-0f39a4fc0b5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "video": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}